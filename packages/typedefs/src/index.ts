import { printSchemaWithDirectives } from "@graphql-tools/utils";

const print = (schema: string): string => {
  let escaped = schema.replace(/\\`/g, "\\\\`").replace(/`/g, "\\`");
  const tabSize = 2;
  const tabRegex = new RegExp(`(^\\s{${tabSize}})|(^[ \\t]+)`, "gm");

  escaped = escaped.replace(tabRegex, (match, p1, p2) => {
    return p1 ? "\t" : "\t".repeat((p2?.length ?? 0) / tabSize);
  });

  escaped = escaped
    .split("\n")
    .map((line) => {
      if (line.trim() === "") {
        return line;
      }
      return `\t${line}`;
    })
    .join("\n");

  return `// This file is automatically generated by @labdigital/graphql-codegen-typedefs
import { gql } from "graphql-tag";

export const typeDefs = gql\`
  extend ${escaped}
\`;
`.trim();
};

export const plugin = (schema: any): string => {
  return print(printSchemaWithDirectives(schema));
};
